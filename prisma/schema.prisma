generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider     = "sqlite"
  url          = "file:./db.sqlite"
  relationMode = "prisma"
}

model User {
  id          String   @id @default(cuid())
  banned      Boolean  @default(false)
  suVerified  Boolean? @default(false)
  displayName String
  mail        String
  role        String   @default("USER") // one of USER, PRIVILEGED, or ADMIN
  username    String   @unique
  reviews     Review[]
  Slides      Slides[]

  @@index([id, username])
}

model Event {
  id            Int            @id @default(autoincrement())
  name          String
  location      String
  mazemapLink   String         @default("")
  summary       String
  description   String
  slides        String
  organizer     String
  difficulty    String // one of EASY, HARD, or SOCIAL
  image         String?
  unixEndTime   Int
  unixStartTime Int
  hidden        Boolean        @default(false)
  reviews       Review[]
  announcement  Announcement[]
}

model Slides {
  id        String   @id @default(cuid())
  link      String
  name      String
  speaker   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  creator   User     @relation(fields: [creatorId], references: [id])

  creatorId String

  @@index([creatorId])
}

model Announcement {
  id       Int     @id @default(autoincrement())
  event    Event   @relation(fields: [eventId], references: [id])
  eventId  Int     @unique
  reminder Boolean
  released Boolean
}

model Review {
  id        String @id @default(cuid())
  timestamp Int
  event     Event  @relation(fields: [eventId], references: [id])
  eventId   Int
  user      User   @relation(fields: [userId], references: [id])
  userId    String
  rating    Int
  comment   String

  @@unique([eventId, userId])
  @@index([eventId])
  @@index([userId])
}

// enum EventDifficulty {
//   EASY
//   HARD
//   SOCIAL
// }

// enum Role {
//   USER
//   PRIVILEGED
//   ADMIN
// }
